ctrl + r ----> reverse search to get command interctively from history
ctrl + w  ------> to delete word by word in terminal what u entered
ctrl + a  ----->begining of  command
ctrl + e   ------> end of entire command
!begining words of history commands---> !hi or !ifc
!21 ----> used to execute 21th cammand from history
man <command> to get manual page of command *****
info <command>  to get full information a
<command> --help 
bin---> system user executable binary program files simply  (commands).no need of special privileges to execute them by normal user
boot---->kernel location and booting configuration file are available
dev---> hard disk devices that are currently detected  by os
etc---> all cofiguration files of softwares installed
lib---->esential library files and kernel modules .. different programs uses  these libaries to add more features instead of 
         everytime writing same libraries  making shared library for all the program when ever they need too utilize it 
         to add those features
         kernel modules-->which supports for the feature 
home ---> provide for normal user home directory
root -->home directory of root user
media ----> used to mount removable media like pendrive and cod rom some dostributions may uses this location as default mount for removable 
            media some disributions not
mnt ---> used for mounting the external hard drive (mounting: process of mapping the hard drive to file systrem hyrarchy of linux system to 
         use the that hard drive as storage 
opt ---> used for installing the user specific external applications 
sbin ---> system administator(super user) executable binary program (commands) files located in this location ..system administator commands require special previleges to execute by normal user
          like iptables and shutdown apt usradd usrmod usrdel systemctl service reboot mkfs init fdisk yum
srv ---> in olden days people are using this directory for web hosting file like for  html and css files now a days using var/www/html
tmp ---> has special featured directory in which who ever the created only that user can delete and modify files other user cant except 
         root user it has sticky bit nature 

usr---> the location where man pages of commands available and also we can create our own custom commands and place inthis location
var --> where all the log files are available ex system logs ,apache, mysql, remote connection logs ,ssh ,boot logs
proc--> location where the the currently executable processes are available actually the programs are from the harddisk loaded into RAM memory (fast retrival) and then exectuted by processor
        means accessing the proc directory means we are actually loooking into   RAM MEMORY storage where the currently executable processes are available
       process: the piece of code currently executed by cpu which is loaded into RAM
       software: set of program file written to achieve required functionality
       program: piece of code 

working with environment variable:
=================================
env ----> command is used to list all environment variables
set up environment variable:
COLLEGE=mgit  ----> this is type varaible declaration will not carry env to any other processes
export OFFICE=FOURNINE  ---> this type of variable declaration will carry env to any other processes
echo $OFFICE  ---> TO print varibale
but if the server get restarted these envs gets wanished to prevent these envs we neeed to place them in a file file and when the server gets restarted
and shell starts the script will execute and set as envs
add variable in ~/config file like NAME=sravan and add the source in ~/.bashrc  filr(source config)


vi editor:
===========
G or shift+g--->end of text in the file
gg ----------> begining of the line
ALT+ right arrow----> end of line
ALT+ left arrow ----->begining of the line
/<required word or search word>  ---->to search words in command mode
dd---> delete the line 5dd -->delete  lines
yy --> copy the line   
p---> paste  the line
yw---> copy the word
===========================
du -sh <directory name> ---> check actual size of  the directory with all its content
ping--->pocket internet grooper
send pockets of data to a server and receive pockets
/etc/hosts--->file which is having list of mappings of ipaddresses and name of the servers
resolve.conf--> this file having the dns system methodology configuration ...first preferances to the hosts file and dns system

dig-->stands for domain information groper used to debugg the dns system 
ex: dig  www.yahoo.com +trace -->trace the dns query system
    dig www.yahoo.com -->  show A record
    dig www.yahoo.com +short -->shows the A record in short form
   dig www.yahoo.com ANY --> show all available records associated to domain
   dig www.yahoo.com MX --> shows mail server record
    
      
nslookup -->stands for  name server lookup for  debuugging of dns  ...name to ip or viceversa
 ex : nslookup  yahoo.com
      nslookup -type=any yahoo.com
      nslookup -type=a sravan.com
      nslookup -type=soa sravan.com
      nslookup -type=ns sravan.com
      nslookup -type=mx sravan.com
      nslookup -type=txt sravan.com
        
   reverse ns lookup --> nslookup <ipaddress>
                         
tracepath google.com ----> it show  tracking path of request
 
ext2:when file is corrupted while entering the file system when system crashes will not identifise the where actually correpted 
ext3: The main benefit of ext3 is that it allows journaling
Journaling has a dedicated area in the file system, where all the changes are tracked. 
When the system crashes, the possibility of file system corruption is less because of journaling.

/etc/rs.local :-->the file script which execute is final stage of booting  (mount /dev/xvda /sravan)
/etc/fstab : --> the file script which is execute at initial stage of booting  

/etc/fstab fields: 1)uuid or name of disk or label
        2)mountpoint
        3)type of filesystem
        4)default or noexec ,ro,noauto,nosuid,rw,nouser -->additional specfications for disk moutnig 
        5)0
        6)0
LABEL=MY_BACKUP /mount/point           ext4    defaults        0       2
e2label /dev/sda5 "MY_BACKUP" --> to create label
mount -t ext4 -o ro /dev/xvda /mount/point -->mount as read only
mount -a -->make sure that all the devices configured inthe /etc/fstab is mounted


Journaling has a dedicated area in the file system, where all the changes are tracked. 
When the system crashes, the possibility of file system corruption is less because of journaling.

working with dns query system:
==============================
dns server has cache for domain ip addresses.this cache can live up to ttl value mentioned ttl means time to live 
client -->/etc/hosts-->/etc/resolve.conf(dns server address)-->dns server
the preference of this dns query is configured in a file /etc/nsswitch.conf
we can change the routing of dns query preference either first goes to local host file or directly to the dns server which is configured in /etc/resolve.conf
active directory or LDAP(light weight directory active protocal) it means instead of having user authentication credentials in local, having in the central database ..so when user wants log in into system it first search in the local as preferences given /etc/ns.switch.conf then goes to central database  ..we can chage the preferences in this file to modify the preference..  
 nsswitch.conf-->nameserviceswitch.conf
 
 working with softlink and hard link:
 =====================================
 
shortcuts: links-->1)soft link and 2)hard link 
soft link -->used to create a short cut of the file and directory which is buried in the long path directory.this soft link has different inode numbers for source file and destination file if source file is deleted then from destination file data can't be accessed 

command : ln -s <sourcefile> <destinationfile>

hard link--> it is also similar to the soft link but the difference is source and destination files have different inode number associated and also if source file is deleted then also the from destination file the data can be accessed

command: ln <sourcefile> <destinationfile>

load on the server: the no of proceesses currently waiting to be executed by cpu because 1 cpu can only execute 1 process at a time ..more the processes are waiting to be executed means server is loaded heavily and lesser the no of processes are waiting means lighter load on the server 
command: uptime --> used to know the when the server got up and averege load on the server
all user related information present in /etc/passwd file 
it has several fields  1)username 2)password field 3)uid (user idenfication number) 4)gid (group identification number) 5)comment field about user 6) user's home directory 7)shell
all the user's password related information present in the /etc/shadow file .actually users password is stored in the system using some alogarithems using one way hashing method 
it consist of 8 feilds they are 1)username 2)hashed password 3)no of days passed since 1 jan 1980 the password was changed 4)the no days required to change password succcessively5)no of days after which the password is expired 6)the no of days before which the password expiry warning is prompted 7)no of days after which the account the is disable 8) the days after which the the account is expired
all the groups related inforation stored in the /etc/group file.and the user who are members of which groups information also present

working with useradd command:
=============================

useradd sravan
useradd -d /opt/sravn sravan --to specify the users home directory
useradd -u <userid>  -g <existing group id> username
useradd -G groupname username--> user is created and user become a meber of that group
useradd -m <username> assign home directory to user
useradd -s </bin/sh or /bin/bash or /sbin/nologin> <username> assign shell  to user

working with usermod command:
=============================

usermod -l <oldusername> <newusername>  ---> to change username
usermod -g <existing groupname> <username> --> to change primary group of a user
usermod -d <homedirectory> <username>  --> to change the home directory of user
usermod -u <userid>  <username>--> to change the userid of a user
usermod -e <expirydate> <username>  --> to set expiry date for the user
usermod -c <comment for user> <username> --> to write comment about user 
usermod -L <username> --> to lock the user
usermod -U <username> --> to unlock the user 
usermod -p <password> <username> --> to set password unencrypted form
usermod -s </bin/sh or /bin/bash or /sbin/nologin> <username> -->to set the shell for the user
groupadd <groupname> --> to add the group
groupdel <groupname>  --> to delete the group
userdel <username>   --> to delete user
groups <username>  --> to check the groups associated to the user
id <username> --> to check the user info uid,gid,groups associated to the user 
usermod -a -G <groupname> <username> ---> to add user in to a existing group
gpasswd -d <groupname> <username> --> to remove a user from group

working with file permissions:
================================

read=r=4, write=w=2 ,ecxecute=x=1 rw=4 rwx=7
 chmod 700 <filename> --> to change the file permission
 chmod -R 644 <directoryname> ---> to change the file recurrsively
   
 special permissions:
 --------------------
  set uid(+s)(0): special set of permission which enables the executable permissions to the all users as its owner
  set gid(+s)(4): special set of permission which enables the executable permissions to al users as its group
  sticky bit(+t)(2): Only the owner (and root) of a file can remove the file within that directory. A common example of this is the /tmp directory:
  SUID = 4
  SGID = 2
  Sticky = 1
  
 working with partitions and formating of a disk:
 ===================================
 lsblk--> list the all blocks attached to server
 blkid  <devicename>--> to see the device id  and type of file system software
 df -h --> check datailed view of disk total,free,used space 
 fdisk -l --> to check all the devices and all partitions in indivisual disk
 fdisk -n --> new partition
 fdisk -m -->help
 
 mkfs -t <filesystemtype> <devicename> --> to make file system on top of harddrive
 mount <devicename> <mount point> --> to mount device 
 umount <devicename> 
 
 if we mount manually using these commands then when the server gets restarted then mount points of devices wanished automatic mounting will not happen
 to get auto mount when the restarted we have configure the device block and mount point in the /etc/fstab file
 ex:
    	UUID=<DEVICEID> <MOUNTPOINT> <TYPEOFFILESYSTEM> defaults,nofails
    	
 working with rpm packages:-
 =============================  	
    	
  rpm-->redhat package manager -->86*32--> 32 bit operating system which can support the 32 bits of data processing at a time by proccessor noarch-->mean operating system architecture indepedent
  rpm -qa --> query all installed packages
  rpm -ivh <package name>  ---> install the package (i=install  v=verbose h=hash tags output )
  rpm -uvh <package name>   ---> update the package  (u=update)
  rpm -e <package name>  ---> remove the package (e=erase)
  rpm -qf <config file location> --> to query the particular file belongings to which package
  rpm -q <package name> --> to check particular file installed or not

  redhat package manage does not resolve dependencies issues by itself so then yum is introduced to avoid this problem 
  it is having repository files containg the romete repository urls 

  working with yum package in redhat:
==================================
Yellowdog Update, Modified (YUM) is a program that manages installation, updates and removal for Red Hat package manager (RPM) systems

 yum list --installed   ---> used to list the all installed packages
 yum info <package name>   --used to find detailed information about that package
 yum list  --> show the all the available packages and installed packages
 yum install <package name> --> to install the package
 yum remove <package name>  --> to remove package
 yum update <package name>  --> to update the package
 
 list List package names from repositories
 -----------------------------------------
yum list available   ---> List all available packages
yum list installed  --->  List all installed packages
yum list all  -->  List installed and available packages

update Update one or all packages on your system
-------------------------------------------------
yum update  ---> Update all packages with available updates
yum update httpd  ---> Update the httpd package (if available)
 
 working with debian packages:
 ===============================
 dpkg -l ---> to query list all packages installed
 dpkg -l <package name>    ---> to query particular package installed or not 
 dpkg -i <package name>    ---> to install dpkg package 
 dpkg -r <package name>    ----> to remove dpkg package
 dpkg -s <package name>    ----> to check status whether installed or not or any issue

working with apt-debian packages:
===================================
Advanced package tool(APT), is a free-software user interface that works with core libraries to handle the installation and removal of software on Debian, and Debian-based Linux distributions.
  
 the configuration file of apt package is /etc/apt/sources.list --> all the repository url's present in this file

apt:
---
 apt is user friendly and easily understandable output 
  
  apt update  --> update apt repo
  apt upgrade  ---> update all installed packages
  apt upgrade <package name> ---> update particular package installed 
  apt install <package name>   --> install package
  apt remove <package name>    --> remove package
  apt search <package name>   ---> to search package is available or not in apt repo
  apt list --installed   --> list all installed packages 
  apt list --installed <package name>  --to see particular package installed or not

apt-get :
---------

 apt-cache pkgnames --> to list all available package name
 apt-get update --> used to update the repository and cache to updated versions
 apt-get upgrade   ---> used to update all the installed packages in the server
 apt-get dist-upgrade  --> to update the linux distribution
 apt-get upgrade <packageName> --only-upgrade   ---> upgrade the specific package installed
 apt-get install <packagename> --> to install packages
 apt-get remove <packagename>  --> to remove the package but it doesnot remove the configuration file which are came with package
 apt-get purge <packagename>   --> removes the packages, and also removes any configuration files related to the packages.
 apt-get autoremove -->Sometimes the packages which are automatically installed to satisfy the dependencies of other packages, are no longer needed then autoremove command is used to remove     				these kind of packages.
apt show <package name>  --> to display details of a package. Part of this information is dependencies and you can see it in the line starting with Depends.including control file
apt-cache depends <package_name>  ---> show dependencies of that package

apt-get remove --purge <package name> --> remove package and configuration files in single shot

apt-cache search <package name> --> shows description about package

  
working with tcp and udp protocols and ports:
===============================================
tcp and udp are the data transfer or communication channels through which tha data transfer or communication between the the servers happens over the internet
tcp: it is connection based protocol ,in this type of  protocol no loss of data pockets   
udp: it is a connection less protocol ,in this type there is chance of loss of data pockets

telnet:- used to test whether we are able connect to server through specific tcp port or not----it makes connection with target server
syntax:  telnet <domain name or ip address> <port>

nc -vz -u <domain name or ip address> <port>   ----> used to check the wether we able able to connect to speific udp protocol or not --- it just sends junk data to the target server
nc -l <port> ---> open port temporarly

working with iptables:
=========================

installing of iptables :  apt-get install iptables
types of tables in the iptables 

consist of INPUT,FORWARD,OUTPUT,PRE-ROUTING,POST-ROUTING chains
1)filter table   2)nat table  3)mangle table  4)raw table

iptables <options> 
-I — Inserts a rule in a chain at a point specified by a user-defined integer value. If no number is specified, iptables places the command at the top of the chain. 
-A — Appends the iptables rule to the end of the specified chain.
-D — Deletes a rule in a particular chain
-t — Specifies a table name. 
--dport — Specifies the destination port of the packet, using the service name, port number, or range of port numbers. The --destination-port match option is synonymous with --dport. 
--sport — Specifies the source port of the packet, using the service name, port number, or range of port numbers. The --source-port match option is synonymous with --sport. 
-n — Displays IP addresses and port numbers in numeric format, rather than the default hostname and network service format. 
-p — Sets the IP protocol for the rule, which can be either icmp, tcp, udp, or all,   (by default all)
-j -used to specify the action ALLOW,REJECT,DROP,RETURN,QUEUE

REJECT — Sends an error packet back to the remote system and drops the packet. 
ACCEPT — Allows the packet to successfully move on to its destination or another chain.
DROP — Drops the packet without responding to the requester. The system that sent the packet is not notified of the failure. 

iptables -L -n -v  (L=list, n=reolves in numeric value ,v=verbose ) , default table is the filter tables ---> list the iptable rules
iptables -L -n -v --line-number   -->print with line numbers

                              {n=IP addresses and port numbers will be printed in numeric format.  By default, the program will try to display them as host names, network names, or services}

iptables -t filter -L ---> to list the filter table    (t= to specify type of table..filter table, nat table,mangle table,raw table)
iptabls -t nat -L  --> to listthe nat table
iptables -F  --> to delete all the rules (F=Flush)

iptables -A INPUT -p tcp/udp/icmp -j DROP ---> drop all the incoming traffic 
commonds:
iptables -A INPUT -p tcp -s 10.12.2.213 --dport 80 -j drop ---> drop the tcp traffic which is comming on port 80 from 10.12.2.213
 generlized command :
 iptables -I/A <type of chain> -p <type of protocol> -s <source address> --dport <destination port> -j <action>
 
 routing
 --------
routing is the path of outbound request from the server ..how the network pockets are reaching to the destination path
route -n  ---> to check the route tables
traceroute <domain name>   ----> to trace the routing path for particular destination server
whois <ip address>  --> to know ip belongs to whom 

adding entry into route table
-----------------------------
route add -net <destination ip address> netmask 255.255.255.255 gw <gateway ip> --> to add route entry
route add -net <dest ip address> netmask 255.255.255.255 reject  ---> reject the outgoing request
route del -net <dest ip address> netmask 255.255.255.255 gw <gw ip> to delete the route entry
  
  NAT ---> Network address translation
  SNAT  ---> source network address translation   --->post-routing
  DNAT  ---> destination network address translatuion  ---> pre-routing --> 
  
  class 19:
  process monitoring and administration:
  ----------------------------------------
 ** kernel: it is a piece of code which manages the all the processes in the server .which is loaded firstly in to the memory and manages all the process to be executed 
   
**  when the server is booting up the first process which is triggered by kernel is init process.which is the one administartates and triggers the other process to be executed by server and this     process is the parent process for all the processes .becauuse of it is triggered firstly it gets pid number is 1 the pid number follws the order of the processes triggerred 

**the max no of process that the server can execute is actually presnet in /proc/sys/kernel/pid_max file , in fact we can change this max no of processes  by adding entry in /etc/sysctl.conf as kernel.pid_max = <max value>
 process: any program which currently executed by the system called as process
 
 virtual memroy : the combination of physical memory and the some of the spaces of hard disk which are allocated to use as memory called as virtual memory
  the process which  are rarely used are moved in to the hard disk memory
 load on the server : it is the no of processes waiting in the line to be proccessed by the processor which actually loaded into the memory for execution 
 it is actually a run queue..menas the no of proceesess are waiting in the queue to process it 
 
 ps -aux --->shows the all the processes running in the system with owner of process,process id,physical memory and virtual memory used by that process ,terminal id  
 ps -ef  ---> shows the extended view
 ps -p <pid> -o ppid=   ---> to know parent process id
 pstree ---> shows processes in tree structure manner 
 pstree -As <PID>   --> shows the specific process tree structure
 
 we terminate the process by sending the signals to the processs
 kill -l   ---> shows all the signals 
 kill -s <signal name> <pid>
 kill -<signal no> <pid>
 kill -9 <pid> forcefully killing the processs
 kill -2 <pid> terminating the process like manullay ctcl+c
 kill -15 <pid> sending signal as complete the process what ur doing and kill your self
 
 Each process is assigned a process priority, which determines how much CPU or processor time is allocated to it for execution.
eventhough the kernel is the one which allocate the cpu time to the process in fact we can change the priority of process using nice command while execution or we can change the priority
 using renice command
 nice 10 <command>
 renice 10 -p <pid> existing process
 renice 15 -u <username> ,<another username>-g <groupname>,<another group name>    ----> to specify the process which is triggerrd by user and group have higher priority
 nice value ranges from -20 to 19,by default its value is zero
 
 ssh:
 ====
 ssh means secure socket shell this protocal is used to log in remotely ,rsa algorithem is used in ssh keys,it follows assymetric encryption
 generation of ssh keys:
 ssh-keygen  -------> used to to generate the keys keys are in encrypted format
 consist of 2 keys 1)public key 2) private key
 public key is with server binded to user and with private key we can decrypt the public key with private key
 
 setup of ssh configuration
 ===========================
 create a directory .ssh under home directory of user make file permission as 700
 create a file named authorized_keys and copy public key into it and make file permission as 600
 
 ssh-copy-id username@ipadress --> used to copy the public remotely

remote log in :
-----------------
ssh -i <private key location> username@ipaddress
ssh -i <private key location> username@ipaddress -p <port number> --> if port forwarded

 
text processing tools:
=====================
1) tr
2)awk 
3)sed
4)grep

tr -d "charactor to delete"   ---> to delete the characters from output
tr 'replace chararcter' 'subitute character'
tr A-Z a-z    ---> to get output from capital to small
tr a-z A-Z    ---> TO GET OUTPUT FROM SMALL TO CAPTIAL

sort : used to get the content in ascending or descending order
sort <filename> to get the content in aseding order
sort -r <filename> to get the content in reverse order

grep: to to search the string in the content
grep <string> <filename> --> to search the string
grep -i <string> <filename>  --> to ingnore the case sensitive
grep -v <string> <filename>  --> to get the the output except the string line
grep -ir <string> <directory_name>  ---> to search the string recurssively
 ^ --> begining of the line
 $  --> end of the line
 ^$ --> balnk lines
 
 grep "^rsra" <filename> --> shows the lines which begins with sra
 grep "$kumar" <filename>  --> shows the lins ends with kumar
 grep "^$" <filename> -->shows the blank lines

linux booting process:
=====================
1)BIOS POST  
2)MBR
3)GRUB
4)kernel
5)init
6)RUNLEVEL

/etc/rcN.d. (Replace the N with the run-level)
In each run-level you will find a series of if links pointing to start-up scripts located in /etc/init.d. 
The names of these links all start as either K or S, followed by a number. 
If the name of the link starts with an S, then that indicates the service will be started when you go into that run level.
 If the name of the link starts with a K, the service will be killed (if running).
there are 8 run levels means mode of server

RUNLEVEL:
========
0)[ init 0 ]-POWEROFF
1)[ init 1 ]-sigle user mode with no network facility available
2)[ init 2 ]-Multiple user mode with no NFS(network file system).no network facility
            **{A Network File System (NFS) allows remote hosts to mount file systems over a network and interact with those file systems as though they are mounted locally. }
3)[ init 3 ]-Multiple user mode under the command line interface and not under the graphical user interface with  network
4)[ init 4]– User-definable.(some research purpose)
            **{ Reserved for a local configuration. Special tasks such as machine tool handling or lab equipment. May include windowing if the system manager configures it.}
            **Most systems still reserved level 4 for the system manager's use.
5)[ init 5 ]– Multiple user mode under GUI (graphical user interface) and this is the standard runlevel for most of the LINUX based systems.
6)[ init 6 ]– Reboot which is used to restart the system.  
7)[ init 7 ]-maintance mode 
  

 working with find & locate :
 ===========================
 find:
 -----
 find / -name tecmint.txt  ---> to find file named  tecmint.txt dir recurssively
 find / -iname tecmint.txt  --->to find file named  tecmint.txt dir recurssively ignore case sensitive
 find / -type d -name Tecmint   ---> to Find all directories whose name is Tecmint in / directory.
 find / -user root -name tecmint.txt  -->To find all or single files called tecmint.txt under / root directory of owner root.
 find /home -user tecmint  ---> To find all files that belong to user Tecmint under /home directory.
 find /home -group developer  -->To find all files that belong to the group Developer under /home directory.
  
 locate:
 ------
 locate sravan.txt  ----> to find file named  sravan.txt dir recurssively
 locate -i *.txt  ---> ignore case sensitive
 **Since locate command relies on a database called mlocate. 
   The said database needs to be updated regularly for the command utility to work
   efficiently,To update the mlocate database, you use a utility called updatedb. 
   It should be noted that you will need superuser privileges for this to work properly, 

sudo updatedb    ---->to update mlocate database

hack with grep:
---------------
grep -ir <string> <directory> to search a word in dir in any file recurssively
grep -ir listen /etc   ---> shows matched word and file name with full path of file  recurssivesly


file compression and archival:
-----------------------------






IO Redirection:
----------------
>   ---> overwrites the content
>>  ---> appends the content

Redirect stdoutput  echo "hi sravan" > sravan.txt      --> overwrites data
Redirect stdout echo "hi sravan" >> sravan.txt         --> appends data

Redirect  stderror cat srvan.txt 2> error.txt   --> overwrites err data
redirect  stderro cat srvan.txt 2>> error.txt   --> appends err data
not to print on terminal and not to redirect to file     cat srvan.txt 2>> /dev/null

tee command is used to redirect output to file  nad print on the screen

echo "sravan is devops guys" | tee sravan.txt   
grep -ir listen /etc | tee err.txt




https://youtu.be/TsKE50hf4PU  -->learn linux link
